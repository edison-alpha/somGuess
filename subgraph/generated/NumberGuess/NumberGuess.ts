// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class GuessResult extends ethereum.Event {
  get params(): GuessResult__Params {
    return new GuessResult__Params(this);
  }
}

export class GuessResult__Params {
  _event: GuessResult;

  constructor(event: GuessResult) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get betAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get generatedNumbers(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }

  get correctNumber(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get userGuess(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get payout(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class NumbersGenerated extends ethereum.Event {
  get params(): NumbersGenerated__Params {
    return new NumbersGenerated__Params(this);
  }
}

export class NumbersGenerated__Params {
  _event: NumbersGenerated;

  constructor(event: NumbersGenerated) {
    this._event = event;
  }

  get player(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get numbers(): Array<BigInt> {
    return this._event.parameters[1].value.toBigIntArray();
  }
}

export class NumberGuess__getCurrentGameNumbersResult {
  value0: Array<BigInt>;
  value1: boolean;

  constructor(value0: Array<BigInt>, value1: boolean) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    return map;
  }

  getNumbers(): Array<BigInt> {
    return this.value0;
  }

  getIsActive(): boolean {
    return this.value1;
  }
}

export class NumberGuess extends ethereum.SmartContract {
  static bind(address: Address): NumberGuess {
    return new NumberGuess("NumberGuess", address);
  }

  generateNumbers(): Array<BigInt> {
    let result = super.call(
      "generateNumbers",
      "generateNumbers():(uint256[3])",
      [],
    );

    return result[0].toBigIntArray();
  }

  try_generateNumbers(): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "generateNumbers",
      "generateNumbers():(uint256[3])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  gameStatsContract(): Address {
    let result = super.call(
      "gameStatsContract",
      "gameStatsContract():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_gameStatsContract(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "gameStatsContract",
      "gameStatsContract():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getContractBalance(): BigInt {
    let result = super.call(
      "getContractBalance",
      "getContractBalance():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_getContractBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getContractBalance",
      "getContractBalance():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCurrentGameNumbers(): NumberGuess__getCurrentGameNumbersResult {
    let result = super.call(
      "getCurrentGameNumbers",
      "getCurrentGameNumbers():(uint256[3],bool)",
      [],
    );

    return new NumberGuess__getCurrentGameNumbersResult(
      result[0].toBigIntArray(),
      result[1].toBoolean(),
    );
  }

  try_getCurrentGameNumbers(): ethereum.CallResult<NumberGuess__getCurrentGameNumbersResult> {
    let result = super.tryCall(
      "getCurrentGameNumbers",
      "getCurrentGameNumbers():(uint256[3],bool)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NumberGuess__getCurrentGameNumbersResult(
        value[0].toBigIntArray(),
        value[1].toBoolean(),
      ),
    );
  }

  hasActiveGame(): boolean {
    let result = super.call("hasActiveGame", "hasActiveGame():(bool)", []);

    return result[0].toBoolean();
  }

  try_hasActiveGame(): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasActiveGame", "hasActiveGame():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class GenerateNumbersCall extends ethereum.Call {
  get inputs(): GenerateNumbersCall__Inputs {
    return new GenerateNumbersCall__Inputs(this);
  }

  get outputs(): GenerateNumbersCall__Outputs {
    return new GenerateNumbersCall__Outputs(this);
  }
}

export class GenerateNumbersCall__Inputs {
  _call: GenerateNumbersCall;

  constructor(call: GenerateNumbersCall) {
    this._call = call;
  }
}

export class GenerateNumbersCall__Outputs {
  _call: GenerateNumbersCall;

  constructor(call: GenerateNumbersCall) {
    this._call = call;
  }

  get numbers(): Array<BigInt> {
    return this._call.outputValues[0].value.toBigIntArray();
  }
}

export class GuessNumberCall extends ethereum.Call {
  get inputs(): GuessNumberCall__Inputs {
    return new GuessNumberCall__Inputs(this);
  }

  get outputs(): GuessNumberCall__Outputs {
    return new GuessNumberCall__Outputs(this);
  }
}

export class GuessNumberCall__Inputs {
  _call: GuessNumberCall;

  constructor(call: GuessNumberCall) {
    this._call = call;
  }

  get _guess(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class GuessNumberCall__Outputs {
  _call: GuessNumberCall;

  constructor(call: GuessNumberCall) {
    this._call = call;
  }
}

export class RecordToStatsCall extends ethereum.Call {
  get inputs(): RecordToStatsCall__Inputs {
    return new RecordToStatsCall__Inputs(this);
  }

  get outputs(): RecordToStatsCall__Outputs {
    return new RecordToStatsCall__Outputs(this);
  }
}

export class RecordToStatsCall__Inputs {
  _call: RecordToStatsCall;

  constructor(call: RecordToStatsCall) {
    this._call = call;
  }

  get player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get betAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get generatedNumbers(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get correctNumber(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get userGuess(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get payout(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }

  get gasUsed(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }
}

export class RecordToStatsCall__Outputs {
  _call: RecordToStatsCall;

  constructor(call: RecordToStatsCall) {
    this._call = call;
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class SetStatsContractCall extends ethereum.Call {
  get inputs(): SetStatsContractCall__Inputs {
    return new SetStatsContractCall__Inputs(this);
  }

  get outputs(): SetStatsContractCall__Outputs {
    return new SetStatsContractCall__Outputs(this);
  }
}

export class SetStatsContractCall__Inputs {
  _call: SetStatsContractCall;

  constructor(call: SetStatsContractCall) {
    this._call = call;
  }

  get _statsContract(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetStatsContractCall__Outputs {
  _call: SetStatsContractCall;

  constructor(call: SetStatsContractCall) {
    this._call = call;
  }
}

export class WithdrawFundsCall extends ethereum.Call {
  get inputs(): WithdrawFundsCall__Inputs {
    return new WithdrawFundsCall__Inputs(this);
  }

  get outputs(): WithdrawFundsCall__Outputs {
    return new WithdrawFundsCall__Outputs(this);
  }
}

export class WithdrawFundsCall__Inputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawFundsCall__Outputs {
  _call: WithdrawFundsCall;

  constructor(call: WithdrawFundsCall) {
    this._call = call;
  }
}
